@inject HttpClient _http

<div class="top-row pl-4 navbar navbar-dark">
    <a class="navbar-brand" href="">LiveDocs</a>
    <button class="navbar-toggler" @onclick="ToggleNavMenu">
        <span class="navbar-toggler-icon"></span>
    </button>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <ul class="nav flex-column">
        @if (files != null)
        {
            foreach (var menu in files)
            {
        <li class="nav-item px-3">

            <NavLink class="nav-link" href="@menu.Name" Match="NavLinkMatch.All">

            <span class="oi oi-home" aria-hidden="true"></span> @menu.Name
        </NavLink>
        </li>

            }
        }
    </ul>
</div>

@code {
    private bool collapseNavMenu = true;

    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    public List<GetResourceDocumentationsFile> files = new();

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    protected override async Task OnInitializedAsync()
    {
        var menuList = await _http.GetFromJsonAsync<GetResourceDocumentationsResponse>("api/v1/resources");

        if (menuList is not null)
        {
            files = menuList.Files;
            StateHasChanged();
        }
        await base.OnInitializedAsync();
    }


    public class GetResourceDocumentationsFile
    {
        public string Name { get; set; }
        public string MdPath { get; set; }
        public string JsonPath { get; set; }
    }

    public class GetResourceDocumentationsResponse
    {
        public List<GetResourceDocumentationsFile> Files { get; init; } = new();
    }

}
